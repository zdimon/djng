/* ----- Autogenerated by Django! Author: Zharikov Dimitry zdimon77@gmail.com --- */
// NGRX
import { Action } from '@ngrx/store';
// CRUD
import { QueryParamsModel } from '@core/_base/crud';
// Models
import { LogModel } from '../_models/log.model';
import { Update } from '@ngrx/entity';

export enum LogActionTypes {
    LogOnServerCreated = '[Edit Log Component] Log On Server Created',
    LogCreated = '[Edit Log Component] Log Created',
    LogUpdated = '[Edit Log Component] Log Updated',
    LogsStatusUpdated = '[Log List Page] Log Status Updated',
    OneLogDeleted = '[Log List Page] One Video Deleted',
    ManyLogsDeleted = '[Log List Page] Many Selected Logs Deleted',
    LogsPageRequested = '[Log List Page] Logs Page Requested',
    LogsPageLoaded = '[Log API] Logs Page Loaded',
    LogsPageCancelled = '[Log API] Logs Page Cancelled',
    LogsPageToggleLoading = '[Log] Logs Page Toggle Loading',
    LogsActionToggleLoading = '[Log] Logs Action Toggle Loading'
}

export class LogOnServerCreated implements Action {
    readonly type = LogActionTypes.LogOnServerCreated;
    constructor(public payload: { log: LogModel }) { }
}

export class LogCreated implements Action {
    readonly type = LogActionTypes.LogCreated;
    constructor(public payload: { log: LogModel }) { }
}

export class LogUpdated implements Action {
    readonly type = LogActionTypes.LogUpdated;
    constructor(public payload: {
        partialLog: Update<LogModel>, // For State update
        results: LogModel // For Server update (through service)
    }) { }
}

export class LogsStatusUpdated implements Action {
    readonly type = LogActionTypes.LogsStatusUpdated;
    constructor(public payload: {
        results: LogModel[],
        status: number
    }) { }
}

export class OneLogDeleted implements Action {
    readonly type = LogActionTypes.OneLogDeleted;
    constructor(public payload: { id: number }) {}
}

export class ManyLogsDeleted implements Action {
    readonly type = LogActionTypes.ManyLogsDeleted;
    constructor(public payload: { ids: number[] }) {}
}

export class LogsPageRequested implements Action {
    readonly type = LogActionTypes.LogsPageRequested;
    constructor(public payload: { page: QueryParamsModel }) { }
}

export class LogsPageLoaded implements Action {
    readonly type = LogActionTypes.LogsPageLoaded;
    constructor(public payload: { results: LogModel[], totalCount: number, page: QueryParamsModel }) { }
}

export class LogsPageCancelled implements Action {
    readonly type = LogActionTypes.LogsPageCancelled;
}

export class LogsPageToggleLoading implements Action {
    readonly type = LogActionTypes.LogsPageToggleLoading;
    constructor(public payload: { isLoading: boolean }) { }
}

export class LogsActionToggleLoading implements Action {
    readonly type = LogActionTypes.LogsActionToggleLoading;
    constructor(public payload: { isLoading: boolean }) { }
}

export type LogActions = LogOnServerCreated
| LogCreated
| LogUpdated
| LogsStatusUpdated
| OneLogDeleted
| ManyLogsDeleted
| LogsPageRequested
| LogsPageLoaded
| LogsPageCancelled
| LogsPageToggleLoading
| LogsActionToggleLoading;
