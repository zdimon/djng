/* ----- Autogenerated by Django! Author: Zharikov Dimitry zdimon77@gmail.com --- */
// NGRX
import { Action } from '@ngrx/store';
// CRUD
import { QueryParamsModel } from '@core/_base/crud';
// Models
import { PlanModel } from '../_models/plan.model';
import { Update } from '@ngrx/entity';

export enum PlanActionTypes {
    PlanOnServerCreated = '[Edit Plan Component] Plan On Server Created',
    PlanCreated = '[Edit Plan Component] Plan Created',
    PlanUpdated = '[Edit Plan Component] Plan Updated',
    PlansStatusUpdated = '[Plan List Page] Plan Status Updated',
    OnePlanDeleted = '[Plan List Page] One Video Deleted',
    ManyPlansDeleted = '[Plan List Page] Many Selected Plans Deleted',
    PlansPageRequested = '[Plan List Page] Plans Page Requested',
    PlansPageLoaded = '[Plan API] Plans Page Loaded',
    PlansPageCancelled = '[Plan API] Plans Page Cancelled',
    PlansPageToggleLoading = '[Plan] Plans Page Toggle Loading',
    PlansActionToggleLoading = '[Plan] Plans Action Toggle Loading'
}

export class PlanOnServerCreated implements Action {
    readonly type = PlanActionTypes.PlanOnServerCreated;
    constructor(public payload: { plan: PlanModel }) { }
}

export class PlanCreated implements Action {
    readonly type = PlanActionTypes.PlanCreated;
    constructor(public payload: { plan: PlanModel }) { }
}

export class PlanUpdated implements Action {
    readonly type = PlanActionTypes.PlanUpdated;
    constructor(public payload: {
        partialPlan: Update<PlanModel>, // For State update
        results: PlanModel // For Server update (through service)
    }) { }
}

export class PlansStatusUpdated implements Action {
    readonly type = PlanActionTypes.PlansStatusUpdated;
    constructor(public payload: {
        results: PlanModel[],
        status: number
    }) { }
}

export class OnePlanDeleted implements Action {
    readonly type = PlanActionTypes.OnePlanDeleted;
    constructor(public payload: { id: number }) {}
}

export class ManyPlansDeleted implements Action {
    readonly type = PlanActionTypes.ManyPlansDeleted;
    constructor(public payload: { ids: number[] }) {}
}

export class PlansPageRequested implements Action {
    readonly type = PlanActionTypes.PlansPageRequested;
    constructor(public payload: { page: QueryParamsModel }) { }
}

export class PlansPageLoaded implements Action {
    readonly type = PlanActionTypes.PlansPageLoaded;
    constructor(public payload: { results: PlanModel[], totalCount: number, page: QueryParamsModel }) { }
}

export class PlansPageCancelled implements Action {
    readonly type = PlanActionTypes.PlansPageCancelled;
}

export class PlansPageToggleLoading implements Action {
    readonly type = PlanActionTypes.PlansPageToggleLoading;
    constructor(public payload: { isLoading: boolean }) { }
}

export class PlansActionToggleLoading implements Action {
    readonly type = PlanActionTypes.PlansActionToggleLoading;
    constructor(public payload: { isLoading: boolean }) { }
}

export type PlanActions = PlanOnServerCreated
| PlanCreated
| PlanUpdated
| PlansStatusUpdated
| OnePlanDeleted
| ManyPlansDeleted
| PlansPageRequested
| PlansPageLoaded
| PlansPageCancelled
| PlansPageToggleLoading
| PlansActionToggleLoading;
