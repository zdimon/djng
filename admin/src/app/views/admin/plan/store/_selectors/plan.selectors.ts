/* ----- Autogenerated by Django! Author: Zharikov Dimitry zdimon77@gmail.com --- */
// NGRX
import { createFeatureSelector, createSelector } from '@ngrx/store';
// Lodash
import { each } from 'lodash';
// CRUD
import { QueryResultsModel, HttpExtenstionsModel } from '@core/_base/crud';
// State
import { PlansState } from '../_reducers/plan.reducers';
import { PlanModel } from '../_models/plan.model';

export const selectPlansState = createFeatureSelector<PlansState>('plan');

export const selectPlanById = (planId: number) => createSelector(
    selectPlansState,
    plansState => plansState.entities[planId]
);

export const selectPlansPageLoading = createSelector(
    selectPlansState,
    plansState => plansState.listLoading
);

export const selectPlansActionLoading = createSelector(
    selectPlansState,
    customersState => customersState.actionsloading
);

export const selectPlansPageLastQuery = createSelector(
    selectPlansState,
    plansState => plansState.lastQuery
);

export const selectLastCreatedPlanId = createSelector(
    selectPlansState,
    plansState => plansState.lastCreatedPlanId
);

export const selectPlansInitWaitingMessage = createSelector(
    selectPlansState,
    plansState => plansState.showInitWaitingMessage
);

export const selectPlansInStore = createSelector(
    selectPlansState,
    planState => {
        const items: PlanModel[] = [];
        each(planState.entities, element => {
            items.push(element);
        });
        const httpExtension = new HttpExtenstionsModel();
        const result: PlanModel[] = httpExtension.sortArray(items, planState.lastQuery.sortField, planState.lastQuery.sortOrder);
        return new QueryResultsModel(result, planState.totalCount, '');
    }
);

export const selectHasPlansInStore = createSelector(
    selectPlansInStore,
    queryResult => {
        if (!queryResult.totalCount) {
            return false;
        }

        return true;
    }
);
