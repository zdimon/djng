/* ----- Autogenerated by Django! Author: Zharikov Dimitry zdimon77@gmail.com --- */
// NGRX
import { createFeatureSelector, createSelector } from '@ngrx/store';
// Lodash
import { each } from 'lodash';
// CRUD
import { QueryResultsModel, HttpExtenstionsModel } from '@core/_base/crud';
// State
import { UsersState } from '../_reducers/user.reducers';
import { UserModel } from '../_models/user.model';

export const selectUsersState = createFeatureSelector<UsersState>('user');

export const selectUserById = (userId: number) => createSelector(
    selectUsersState,
    usersState => usersState.entities[userId]
);

export const selectUsersPageLoading = createSelector(
    selectUsersState,
    usersState => usersState.listLoading
);

export const selectUsersActionLoading = createSelector(
    selectUsersState,
    customersState => customersState.actionsloading
);

export const selectUsersPageLastQuery = createSelector(
    selectUsersState,
    usersState => usersState.lastQuery
);

export const selectLastCreatedUserId = createSelector(
    selectUsersState,
    usersState => usersState.lastCreatedUserId
);

export const selectUsersInitWaitingMessage = createSelector(
    selectUsersState,
    usersState => usersState.showInitWaitingMessage
);

export const selectUsersInStore = createSelector(
    selectUsersState,
    userState => {
        const items: UserModel[] = [];
        each(userState.entities, element => {
            items.push(element);
        });
        const httpExtension = new HttpExtenstionsModel();
        const result: UserModel[] = httpExtension.sortArray(items, userState.lastQuery.sortField, userState.lastQuery.sortOrder);
        return new QueryResultsModel(result, userState.totalCount, '');
    }
);

export const selectHasUsersInStore = createSelector(
    selectUsersInStore,
    queryResult => {
        if (!queryResult.totalCount) {
            return false;
        }

        return true;
    }
);
